D G "__PCM__" 0 0 ""4.130""
D G "__DEVICE__" 0 0 ""
D G "__DATE__" 0 0 ""05-abr-14""
D G "__TIME__" 0 0 ""16:52:18""
D G "__DEBUG" 0 0 "1"
D G "__16F877A" 0 0 "TRUE" "Standard Header file for the PIC16F877A device ////////////////"
d G "PIN_A0" 1 19 "40"
d G "PIN_A1" 1 20 "41"
d G "PIN_A2" 1 21 "42"
d G "PIN_A3" 1 22 "43"
d G "PIN_A4" 1 23 "44"
d G "PIN_A5" 1 24 "45"
d G "PIN_B0" 1 26 "48"
d G "PIN_B1" 1 27 "49"
d G "PIN_B2" 1 28 "50"
d G "PIN_B3" 1 29 "51"
d G "PIN_B4" 1 30 "52"
d G "PIN_B5" 1 31 "53"
d G "PIN_B6" 1 32 "54"
d G "PIN_B7" 1 33 "55"
d G "PIN_C0" 1 35 "56"
d G "PIN_C1" 1 36 "57"
d G "PIN_C2" 1 37 "58"
d G "PIN_C3" 1 38 "59"
d G "PIN_C4" 1 39 "60"
d G "PIN_C5" 1 40 "61"
d G "PIN_C6" 1 41 "62"
d G "PIN_C7" 1 42 "63"
d G "PIN_D0" 1 44 "64"
d G "PIN_D1" 1 45 "65"
d G "PIN_D2" 1 46 "66"
d G "PIN_D3" 1 47 "67"
d G "PIN_D4" 1 48 "68"
d G "PIN_D5" 1 49 "69"
d G "PIN_D6" 1 50 "70"
d G "PIN_D7" 1 51 "71"
d G "PIN_E0" 1 53 "72"
d G "PIN_E1" 1 54 "73"
d G "PIN_E2" 1 55 "74"
d G "FALSE" 1 58 "0"
d G "TRUE" 1 59 "1"
d G "BYTE" 1 61 "int8"
d G "BOOLEAN" 1 62 "int1"
d G "getc" 1 64 "getch"
d G "fgetc" 1 65 "getch"
d G "getchar" 1 66 "getch"
d G "putc" 1 67 "putchar"
d G "fputc" 1 68 "putchar"
d G "fgets" 1 69 "gets"
d G "fputs" 1 70 "puts"
d G "WDT_FROM_SLEEP" 1 75 "3"
d G "WDT_TIMEOUT" 1 76 "11"
d G "MCLR_FROM_SLEEP" 1 77 "19"
d G "MCLR_FROM_RUN" 1 78 "27"
d G "NORMAL_POWER_UP" 1 79 "25"
d G "BROWNOUT_RESTART" 1 80 "26"
d G "T0_INTERNAL" 1 87 "0"
d G "T0_EXT_L_TO_H" 1 88 "32"
d G "T0_EXT_H_TO_L" 1 89 "48"
d G "T0_DIV_1" 1 91 "8"
d G "T0_DIV_2" 1 92 "0"
d G "T0_DIV_4" 1 93 "1"
d G "T0_DIV_8" 1 94 "2"
d G "T0_DIV_16" 1 95 "3"
d G "T0_DIV_32" 1 96 "4"
d G "T0_DIV_64" 1 97 "5"
d G "T0_DIV_128" 1 98 "6"
d G "T0_DIV_256" 1 99 "7"
d G "T0_8_BIT" 1 102 "0"
d G "RTCC_INTERNAL" 1 104 "0" "The following are provided for compatibility"
d G "RTCC_EXT_L_TO_H" 1 105 "32" "with older compiler versions"
d G "RTCC_EXT_H_TO_L" 1 106 "48"
d G "RTCC_DIV_1" 1 107 "8"
d G "RTCC_DIV_2" 1 108 "0"
d G "RTCC_DIV_4" 1 109 "1"
d G "RTCC_DIV_8" 1 110 "2"
d G "RTCC_DIV_16" 1 111 "3"
d G "RTCC_DIV_32" 1 112 "4"
d G "RTCC_DIV_64" 1 113 "5"
d G "RTCC_DIV_128" 1 114 "6"
d G "RTCC_DIV_256" 1 115 "7"
d G "RTCC_8_BIT" 1 116 "0"
d G "WDT_18MS" 1 128 "8"
d G "WDT_36MS" 1 129 "9"
d G "WDT_72MS" 1 130 "10"
d G "WDT_144MS" 1 131 "11"
d G "WDT_288MS" 1 132 "12"
d G "WDT_576MS" 1 133 "13"
d G "WDT_1152MS" 1 134 "14"
d G "WDT_2304MS" 1 135 "15"
d G "T1_DISABLED" 1 141 "0"
d G "T1_INTERNAL" 1 142 "0x85"
d G "T1_EXTERNAL" 1 143 "0x87"
d G "T1_EXTERNAL_SYNC" 1 144 "0x83"
d G "T1_CLK_OUT" 1 146 "8"
d G "T1_DIV_BY_1" 1 148 "0"
d G "T1_DIV_BY_2" 1 149 "0x10"
d G "T1_DIV_BY_4" 1 150 "0x20"
d G "T1_DIV_BY_8" 1 151 "0x30"
d G "T2_DISABLED" 1 156 "0"
d G "T2_DIV_BY_1" 1 157 "4"
d G "T2_DIV_BY_4" 1 158 "5"
d G "T2_DIV_BY_16" 1 159 "6"
d G "CCP_OFF" 1 165 "0"
d G "CCP_CAPTURE_FE" 1 166 "4"
d G "CCP_CAPTURE_RE" 1 167 "5"
d G "CCP_CAPTURE_DIV_4" 1 168 "6"
d G "CCP_CAPTURE_DIV_16" 1 169 "7"
d G "CCP_COMPARE_SET_ON_MATCH" 1 170 "8"
d G "CCP_COMPARE_CLR_ON_MATCH" 1 171 "9"
d G "CCP_COMPARE_INT" 1 172 "0xA"
d G "CCP_COMPARE_RESET_TIMER" 1 173 "0xB"
d G "CCP_PWM" 1 174 "0xC"
d G "CCP_PWM_PLUS_1" 1 175 "0x1c"
d G "CCP_PWM_PLUS_2" 1 176 "0x2c"
d G "CCP_PWM_PLUS_3" 1 177 "0x3c"
d G "PSP_ENABLED" 1 189 "0x10"
d G "PSP_DISABLED" 1 190 "0"
d G "SPI_DISABLED" 1 197 "0x00"
d G "SPI_MASTER" 1 198 "0x20"
d G "SPI_SLAVE" 1 199 "0x24"
d G "SPI_SCK_IDLE_HIGH" 1 200 "0x10"
d G "SPI_SCK_IDLE_LOW" 1 201 "0x00"
d G "SPI_CLK_DIV_4" 1 202 "0x00"
d G "SPI_CLK_DIV_16" 1 203 "0x01"
d G "SPI_CLK_DIV_64" 1 204 "0x02"
d G "SPI_CLK_T2" 1 205 "0x03"
d G "SPI_SS_DISABLED" 1 206 "0x01"
d G "SPI_XMIT_L_TO_H" 1 208 "0x4000"
d G "SPI_XMIT_H_TO_L" 1 209 "0x0000"
d G "SPI_SAMPLE_AT_MIDDLE" 1 211 "0x0000"
d G "SPI_SAMPLE_AT_END" 1 212 "0x8000"
d G "SPI_L_TO_H" 1 215 "SPI_SCK_IDLE_LOW"
d G "SPI_H_TO_L" 1 216 "SPI_SCK_IDLE_HIGH"
d G "UART_ADDRESS" 1 222 "2"
d G "UART_DATA" 1 223 "4"
d G "A0_A3_A1_A3" 1 227 "0xfff04"
d G "A0_A3_A1_A2_OUT_ON_A4_A5" 1 228 "0xfcf03"
d G "A0_A3_A1_A3_OUT_ON_A4_A5" 1 229 "0xbcf05"
d G "NC_NC_NC_NC" 1 230 "0x0ff07"
d G "A0_A3_A1_A2" 1 231 "0xfff02"
d G "A0_A3_NC_NC_OUT_ON_A4" 1 232 "0x9ef01"
d G "A0_VR_A1_VR" 1 233 "0x3ff06"
d G "A3_VR_A2_VR" 1 234 "0xcff0e"
d G "CP1_INVERT" 1 235 "0x0000010"
d G "CP2_INVERT" 1 236 "0x0000020"
d G "VREF_LOW" 1 244 "0xa0"
d G "VREF_HIGH" 1 245 "0x80"
d G "VREF_A2" 1 247 "0x40"
d G "ADC_OFF" 1 255 "0" "ADC Off"
d G "ADC_CLOCK_DIV_2" 1 256 "0x10000"
d G "ADC_CLOCK_DIV_4" 1 257 "0x4000"
d G "ADC_CLOCK_DIV_8" 1 258 "0x0040"
d G "ADC_CLOCK_DIV_16" 1 259 "0x4040"
d G "ADC_CLOCK_DIV_32" 1 260 "0x0080"
d G "ADC_CLOCK_DIV_64" 1 261 "0x4080"
d G "ADC_CLOCK_INTERNAL" 1 262 "0x00c0" "Internal 2-6us"
d G "NO_ANALOGS" 1 265 "7" "None"
d G "ALL_ANALOG" 1 266 "0" "A0 A1 A2 A3 A5 E0 E1 E2"
d G "AN0_AN1_AN2_AN4_AN5_AN6_AN7_VSS_VREF" 1 267 "1" "A0 A1 A2 A5 E0 E1 E2 VRefh=A3"
d G "AN0_AN1_AN2_AN3_AN4" 1 268 "2" "A0 A1 A2 A3 A5"
d G "AN0_AN1_AN2_AN4_VSS_VREF" 1 269 "3" "A0 A1 A2 A4 VRefh=A3"
d G "AN0_AN1_AN3" 1 270 "4" "A0 A1 A3"
d G "AN0_AN1_VSS_VREF" 1 271 "5" "A0 A1 VRefh=A3"
d G "AN0_AN1_AN4_AN5_AN6_AN7_VREF_VREF" 1 272 "0x08" "A0 A1 A5 E0 E1 E2 VRefh=A3 VRefl=A2"
d G "AN0_AN1_AN2_AN3_AN4_AN5" 1 273 "0x09" "A0 A1 A2 A3 A5 E0"
d G "AN0_AN1_AN2_AN4_AN5_VSS_VREF" 1 274 "0x0A" "A0 A1 A2 A5 E0 VRefh=A3"
d G "AN0_AN1_AN4_AN5_VREF_VREF" 1 275 "0x0B" "A0 A1 A5 E0 VRefh=A3 VRefl=A2"
d G "AN0_AN1_AN4_VREF_VREF" 1 276 "0x0C" "A0 A1 A4 VRefh=A3 VRefl=A2"
d G "AN0_AN1_VREF_VREF" 1 277 "0x0D" "A0 A1 VRefh=A3 VRefl=A2"
d G "AN0" 1 278 "0x0E" "A0"
d G "AN0_VREF_VREF" 1 279 "0x0F" "A0 VRefh=A3 VRefl=A2"
d G "ANALOG_RA3_REF" 1 280 "0x1" "!old only provided for compatibility"
d G "A_ANALOG" 1 281 "0x2" "!old only provided for compatibility"
d G "A_ANALOG_RA3_REF" 1 282 "0x3" "!old only provided for compatibility"
d G "RA0_RA1_RA3_ANALOG" 1 283 "0x4" "!old only provided for compatibility"
d G "RA0_RA1_ANALOG_RA3_REF" 1 284 "0x5" "!old only provided for compatibility"
d G "ANALOG_RA3_RA2_REF" 1 285 "0x8" "!old only provided for compatibility"
d G "ANALOG_NOT_RE1_RE2" 1 286 "0x9" "!old only provided for compatibility"
d G "ANALOG_NOT_RE1_RE2_REF_RA3" 1 287 "0xA" "!old only provided for compatibility"
d G "ANALOG_NOT_RE1_RE2_REF_RA3_RA2" 1 288 "0xB" "!old only provided for compatibility"
d G "A_ANALOG_RA3_RA2_REF" 1 289 "0xC" "!old only provided for compatibility"
d G "RA0_RA1_ANALOG_RA3_RA2_REF" 1 290 "0xD" "!old only provided for compatibility"
d G "RA0_ANALOG" 1 291 "0xE" "!old only provided for compatibility"
d G "RA0_ANALOG_RA3_RA2_REF" 1 292 "0xF" "!old only provided for compatibility"
d G "ADC_START_AND_READ" 1 295 "7" "This is the default if nothing is specified"
d G "ADC_START_ONLY" 1 296 "1"
d G "ADC_READ_ONLY" 1 297 "6"
d G "L_TO_H" 1 305 "0x40"
d G "H_TO_L" 1 306 "0"
d G "GLOBAL" 1 308 "0x0BC0"
d G "PERIPH" 1 309 "0x0B40"
d G "INT_RTCC" 1 310 "0x000B20"
d G "INT_RB" 1 311 "0x00FF0B08"
d G "INT_EXT_L2H" 1 312 "0x50000B10"
d G "INT_EXT_H2L" 1 313 "0x60000B10"
d G "INT_EXT" 1 314 "0x000B10"
d G "INT_AD" 1 315 "0x008C40"
d G "INT_TBE" 1 316 "0x008C10"
d G "INT_RDA" 1 317 "0x008C20"
d G "INT_TIMER1" 1 318 "0x008C01"
d G "INT_TIMER2" 1 319 "0x008C02"
d G "INT_CCP1" 1 320 "0x008C04"
d G "INT_CCP2" 1 321 "0x008D01"
d G "INT_SSP" 1 322 "0x008C08"
d G "INT_PSP" 1 323 "0x008C80"
d G "INT_BUSCOL" 1 324 "0x008D08"
d G "INT_EEPROM" 1 325 "0x008D10"
d G "INT_TIMER0" 1 326 "0x000B20"
d G "INT_COMP" 1 327 "0x008D40"
D G "eeprom_address" 0 8 "long int"
D G "MODBUS_TYPE" 0 9 "MODBUS_TYPE_SLAVE"
D G "MODBUS_SERIAL_TYPE" 0 10 "MODBUS_RTU"
D G "MODBUS_SERIAL_RX_BUFFER_SIZE" 0 11 "64"
D G "MODBUS_SERIAL_BAUD" 0 12 "9600"
D G "MODBUS_SERIAL_INT_SOURCE" 0 13 "MODBUS_INT_RDA"
D G "MODBUS_ADDRESS" 0 14 "1"
D G "max_user_count" 0 15 "0x0F" "Este valor debe estar en 255(0xFF) en la version final"
D G "max_access_count" 0 16 "0x0F" "Este valor debe estar en 255(0xFF) en la version final"
D G "green_led_door_0" 0 17 "PIN_D1"
D G "green_led_door_1" 0 18 "PIN_A1"
D G "red_led_door_0" 0 19 "PIN_D2"
D G "red_led_door_1" 0 20 "PIN_A2"
D G "open_door_0" 0 21 "PIN_C5"
D G "open_door_1" 0 22 "PIN_A3"
D G "buzzer_door_0" 0 23 "PIN_C2"
D G "buzzer_door_1" 0 24 "PIN_A4"
D G "WIEGAND_37" 0 25 "1"
V G "seconds" 0 31 "int8"
V G "minutes" 0 32 "int8"
V G "hours" 0 33 "int8"
V G "date" 0 34 "int8"
V G "mounth" 0 35 "int8"
V G "year_high" 0 36 "int8"
V G "year_low" 0 37 "int8"
V G "current_door" 0 38 "int1"
V G "user" 0 39 "int8"
V G "time_counter" 0 40 "int8"
V G "facCode" 2 46 "int8"
V G "userCode" 2 47 "int16"
V G "wiegand_counter" 2 48 "int8"
D G "CodeBits" 2 52 "26"
V G "read_complete" 2 53 "int1"
V G "buffer" 2 54 "int8[26]" "buffer del codigo Wiegand que llega"
V G "reading" 2 55 "int8" "lectura del puerto de protocolo Wiegand"
V G "door" 2 56 "int1" "Funcion para limpiar (poner en cero) el buffer de codigo"
F G "clean_buffer" 2 59 "void()"
V L "i" 2 61 "int8"
C L "code_update" 2 2 1 "FUNCTION"
F G "code_update" 2 68 "void()"
V L "i" 2 70 "int8" "Facility Code"
V L "multiplo" 2 73 "int16"
C L "code_update" 2 2 1 "FUNCTION"
C L "code_update" 2 2 1 "FUNCTION"
C L "code_update" 2 2 1 "FUNCTION"
C L "code_update" 2 2 1 "FUNCTION"
C L "check_parity" 2 2 1 "FUNCTION"
F G "check_parity" 2 90 "int8()"
V L "sum" 2 92 "int8"
C L "check_parity" 2 2 1 "FUNCTION"
V L "i" 2 93 "int8" "Comprobando 1ra mitad del codigo Wiegand"
C L "check_parity" 2 2 2 "FUNCTION"
C L "check_parity" 2 2 2 "FUNCTION"
C L "check_parity" 2 2 2 "FUNCTION"
C L "buffer_update" 2 2 1 "FUNCTION"
V L "value" 2 119 "int8"
V L "currentDoor" 2 119 "int8"
F G "buffer_update" 2 119 "void(int8 value,int8 currentDoor)"
F G "receive_wiegand" 2 130 "int8()"
C L "receive_wiegand" 2 2 1 "FUNCTION"
V L "_facCode" 2 144 "int8"
V L "_userCode" 2 144 "int16"
F G "get_code" 2 144 "void(int8 _facCode,int16 _userCode)"
F G "get_door" 2 150 "int8()"
C L "ext_handler" 2 2 1 "FUNCTION"
F G "ext_handler" 2 157 "void()"
C L "ext_handler" 2 2 1 "FUNCTION"
C L "ext_handler" 2 2 1 "FUNCTION"
C L "ext_handler" 2 2 1 "FUNCTION"
C L "ext_handler" 2 2 1 "FUNCTION"
C L "ext_handler" 2 2 1 "FUNCTION"
F G "wiegand_init" 2 282 "void()"
D G "MODBUS_H" 4 64 ""
D G "MODBUS_PROTOCOL_SERIAL" 4 67 "0"
D G "MODBUS_PROTOCOL_TCPIP" 4 68 "100"
D G "MODBUS_TYPE_MASTER" 4 69 "99999"
D G "MODBUS_TYPE_SLAVE" 4 70 "88888"
D G "MODBUS_TYPE_CLIENT" 4 71 "20"
D G "MODBUS_TYPE_SERVER" 4 72 "21"
D G "MODBUS_INT_RDA" 4 73 "77777"
D G "MODBUS_INT_RDA2" 4 74 "66666"
D G "MODBUS_INT_RDA3" 4 75 "44444"
D G "MODBUS_INT_RDA4" 4 76 "33333"
D G "MODBUS_INT_EXT" 4 77 "55555"
D G "MODBUS_RTU" 4 78 "1"
D G "MODBUS_ASCII" 4 79 "2"
D G "MODBUS_TIMER_NOISR" 4 80 "13"
D G "MODBUS_TIMER_ISR" 4 81 "12"
D G "MODBUS_TIMER_T1" 4 82 "14"
D G "MODBUS_TIMER_T2" 4 83 "15"
D G "MODBUS_PROTOCOL" 4 86 "MODBUS_PROTOCOL_SERIAL"
D G "MODBUS_SERIAL_RX_PIN" 4 107 "PIN_C7" "Data receive pin"
D G "MODBUS_SERIAL_TX_PIN" 4 111 "PIN_C6" "Data transmit pin"
D G "MODBUS_SERIAL_ENABLE_PIN" 4 115 "0" "Controls DE pin.  RX low, TX high."
D G "MODBUS_SERIAL_RX_ENABLE" 4 119 "0" "Controls RE pin.  Should keep low."
D G "MODBUS_SERIAL_TIMEOUT" 4 126 "10000" "in us"
D G "MODBUS_TIMER_USED" 4 139 "MODBUS_TIMER_T1"
D G "MODBUS_PHY_LAYER_H" 5 25 ""
D G "WAIT_FOR_HW_BUFFER" 5 90 "() {    while(!TRMT); }"
V G "modbus_serial_new" 5 96 "int1"
E G "ILLEGAL_FUNCTION" 5 106 "1"
E G "ILLEGAL_DATA_ADDRESS" 5 107 "2"
E G "ILLEGAL_DATA_VALUE" 5 107 "3"
E G "SLAVE_DEVICE_FAILURE" 5 107 "4"
E G "ACKNOWLEDGE" 5 107 "5"
E G "SLAVE_DEVICE_BUSY" 5 108 "6"
E G "MEMORY_PARITY_ERROR" 5 108 "8"
E G "GATEWAY_PATH_UNAVAILABLE" 5 108 "10"
E G "GATEWAY_TARGET_NO_RESPONSE" 5 109 "11"
E G "TIMEOUT" 5 109 "12"
T G "exception" 5 109 "_exception" "These functions are defined in the MODBUS protocol.  These can be"
E G "FUNC_READ_COILS" 5 116 "1"
E G "FUNC_READ_DISCRETE_INPUT" 5 117 "2"
E G "FUNC_READ_HOLDING_REGISTERS" 5 117 "3"
E G "FUNC_READ_INPUT_REGISTERS" 5 118 "4"
E G "FUNC_WRITE_SINGLE_COIL" 5 118 "5"
E G "FUNC_WRITE_SINGLE_REGISTER" 5 119 "6"
E G "FUNC_READ_EXCEPTION_STATUS" 5 119 "7"
E G "FUNC_DIAGNOSTICS" 5 120 "8"
E G "FUNC_GET_COMM_EVENT_COUNTER" 5 120 "11"
E G "FUNC_GET_COMM_EVENT_LOG" 5 121 "12"
E G "FUNC_WRITE_MULTIPLE_COILS" 5 121 "15"
E G "FUNC_WRITE_MULTIPLE_REGISTERS" 5 122 "16"
E G "FUNC_REPORT_SLAVE_ID" 5 122 "17"
E G "FUNC_READ_FILE_RECORD" 5 123 "20"
E G "FUNC_WRITE_FILE_RECORD" 5 123 "21"
E G "FUNC_MASK_WRITE_REGISTER" 5 124 "22"
E G "FUNC_READ_WRITE_MULTIPLE_REGISTERS" 5 124 "23"
E G "FUNC_READ_FIFO_QUEUE" 5 124 "24"
T G "function" 5 124 "_function" "Our receive struct.  This is used when receiving data as a master or"
V G "modbus_rx" 5 139 "{int8 address,int8 len,function func,exception error,int8[64] data}" "For Custom Commands                                                             ////"
C L "modbus_serial_send_start" 5 2 19 "FUNCTION"
V L "to" 5 164 "int8"
V L "func" 5 164 "int8"
F G "modbus_serial_send_start" 5 164 "void(int8 to,int8 func)" "Purpose:    Sends a message stop"
C L "modbus_serial_send_start" 5 2 2 "FUNCTION"
F G "modbus_serial_send_stop" 5 169 "void()" "Purpose:    Puts a character onto the serial line"
C L "modbus_serial_send_stop" 5 2 2 "FUNCTION"
V L "c" 5 174 "int8"
F G "modbus_serial_putc" 5 174 "void(int8 c)" "For Init                                                                        ////"
C L "modbus_serial_putc" 5 2 3 "FUNCTION"
F G "RCV_ON" 5 183 "void()" "MODBUS_PHY_LAYER_H"
D G "MODBUS_APP_LAYER_H" 6 24 ""
C L "RCV_ON" 5 2 19 "FUNCTION"
C L "RCV_ON" 6 29 12 "FUNCTION"
F G "modbus_init" 6 43 "void()" "Purpose:    Get a message from the RS485 bus and store it in a buffer"
C L "modbus_init" 6 29 4 "FUNCTION"
F G "modbus_kbhit" 6 50 "int8()" "Master Api                                                                       ////"
C L "modbus_kbhit" 6 29 74 "FUNCTION"
V L "address" 6 376 "int8"
V L "byte_count" 6 376 "int8"
V L "coil_data" 6 376 "*int8"
F G "modbus_read_coils_rsp" 6 376 "void(int8 address,int8 byte_count,*int8 coil_data)" "read_discrete_input_rsp"
C L "modbus_read_coils_rsp" 6 29 4 "FUNCTION"
V L "address" 6 385 "int8"
V L "byte_count" 6 385 "int8"
V L "input_data" 6 386 "*int8"
F G "modbus_read_discrete_input_rsp" 6 386 "void(int8 address,int8 byte_count,*int8 input_data)" "read_holding_registers_rsp"
C L "modbus_read_discrete_input_rsp" 6 29 4 "FUNCTION"
V L "address" 6 395 "int8"
V L "byte_count" 6 395 "int8"
V L "reg_data" 6 396 "*int16"
F G "modbus_read_holding_registers_rsp" 6 396 "void(int8 address,int8 byte_count,*int16 reg_data)" "read_input_registers_rsp"
C L "modbus_read_holding_registers_rsp" 6 29 4 "FUNCTION"
V L "address" 6 405 "int8"
V L "byte_count" 6 405 "int8"
V L "input_data" 6 406 "*int16"
F G "modbus_read_input_registers_rsp" 6 406 "void(int8 address,int8 byte_count,*int16 input_data)" "write_single_coil_rsp"
C L "modbus_read_input_registers_rsp" 6 29 4 "FUNCTION"
V L "address" 6 415 "int8"
V L "output_address" 6 415 "int16"
V L "output_value" 6 416 "int16"
F G "modbus_write_single_coil_rsp" 6 416 "void(int8 address,int16 output_address,int16 output_value)" "write_single_register_rsp"
C L "modbus_write_single_coil_rsp" 6 29 4 "FUNCTION"
V L "address" 6 425 "int8"
V L "reg_address" 6 425 "int16"
V L "reg_value" 6 426 "int16"
F G "modbus_write_single_register_rsp" 6 426 "void(int8 address,int16 reg_address,int16 reg_value)" "read_exception_status_rsp"
C L "modbus_write_single_register_rsp" 6 29 2 "FUNCTION"
V L "address" 6 433 "int8"
V L "data" 6 433 "int8"
F G "modbus_read_exception_status_rsp" 6 433 "void(int8 address,int8 data)" "diagnostics_rsp"
C L "modbus_read_exception_status_rsp" 6 29 4 "FUNCTION"
V L "address" 6 442 "int8"
V L "sub_func" 6 442 "int16"
V L "data" 6 442 "int16"
F G "modbus_diagnostics_rsp" 6 442 "void(int8 address,int16 sub_func,int16 data)" "get_comm_event_counter_rsp"
C L "modbus_diagnostics_rsp" 6 29 4 "FUNCTION"
V L "address" 6 450 "int8"
V L "status" 6 450 "int16"
V L "event_count" 6 451 "int16"
F G "modbus_get_comm_event_counter_rsp" 6 451 "void(int8 address,int16 status,int16 event_count)" "get_comm_event_counter_rsp"
C L "modbus_get_comm_event_counter_rsp" 6 29 7 "FUNCTION"
V L "address" 6 463 "int8"
V L "status" 6 463 "int16"
V L "event_count" 6 464 "int16"
V L "message_count" 6 464 "int16"
V L "events" 6 465 "*int8"
V L "events_len" 6 465 "int8"
F G "modbus_get_comm_event_log_rsp" 6 465 "void(int8 address,int16 status,int16 event_count,int16 message_count,*int8 events,int8 events_len)" "write_multiple_coils_rsp"
C L "modbus_get_comm_event_log_rsp" 6 29 4 "FUNCTION"
V L "address" 6 474 "int8"
V L "start_address" 6 474 "int16"
V L "quantity" 6 475 "int16"
F G "modbus_write_multiple_coils_rsp" 6 475 "void(int8 address,int16 start_address,int16 quantity)" "write_multiple_registers_rsp"
C L "modbus_write_multiple_coils_rsp" 6 29 4 "FUNCTION"
V L "address" 6 484 "int8"
V L "start_address" 6 484 "int16"
V L "quantity" 6 485 "int16"
F G "modbus_write_multiple_registers_rsp" 6 485 "void(int8 address,int16 start_address,int16 quantity)" "report_slave_id_rsp"
C L "modbus_write_multiple_registers_rsp" 6 29 6 "FUNCTION"
V L "address" 6 496 "int8"
V L "slave_id" 6 496 "int8"
V L "run_status" 6 496 "int8"
V L "data" 6 497 "*int8"
V L "data_len" 6 497 "int8"
F G "modbus_report_slave_id_rsp" 6 497 "void(int8 address,int8 slave_id,int8 run_status,*int8 data,int8 data_len)" "read_file_record_rsp"
C L "modbus_report_slave_id_rsp" 6 29 4 "FUNCTION"
V L "address" 6 506 "int8"
V L "byte_count" 6 506 "int8"
V L "request" 6 507 "*int8"
F G "modbus_read_file_record_rsp" 6 507 "void(int8 address,int8 byte_count,*int8 request)" "write_file_record_rsp"
C L "modbus_read_file_record_rsp" 6 29 4 "FUNCTION"
V L "address" 6 516 "int8"
V L "byte_count" 6 516 "int8"
V L "request" 6 517 "*int8"
F G "modbus_write_file_record_rsp" 6 517 "void(int8 address,int8 byte_count,*int8 request)" "mask_write_register_rsp"
C L "modbus_write_file_record_rsp" 6 29 5 "FUNCTION"
V L "address" 6 527 "int8"
V L "reference_address" 6 527 "int16"
V L "AND_mask" 6 528 "int16"
V L "OR_mask" 6 528 "int16"
F G "modbus_mask_write_register_rsp" 6 528 "void(int8 address,int16 reference_address,int16 AND_mask,int16 OR_mask)" "read_write_multiple_registers_rsp"
C L "modbus_mask_write_register_rsp" 6 29 4 "FUNCTION"
V L "address" 6 537 "int8"
V L "data_len" 6 537 "int8"
V L "data" 6 538 "*int16"
F G "modbus_read_write_multiple_registers_rsp" 6 538 "void(int8 address,int8 data_len,*int16 data)" "read_FIFO_queue_rsp"
C L "modbus_read_write_multiple_registers_rsp" 6 29 4 "FUNCTION"
V L "address" 6 547 "int8"
V L "FIFO_len" 6 547 "int16"
V L "data" 6 547 "*int16"
F G "modbus_read_FIFO_queue_rsp" 6 547 "void(int8 address,int16 FIFO_len,*int16 data)"
V L "address" 6 549 "int8"
V L "func" 6 549 "int16"
V L "error" 6 549 "exception"
F G "modbus_exception_rsp" 6 549 "void(int8 address,int16 func,exception error)" "MODBUS_TYPE"
C L "modbus_exception_rsp" 6 29 1 "FUNCTION"
D G "MODBUS_PHY_LAYER_RTU_C" 7 19 ""
D G "MODBUS_GETDATA_TIMEOUT" 7 37 "40"
D G "RCV_OFF" 7 41 "() {disable_interrupts(INT_RDA);}"
F B "reset_cpu" 0 0
F B "abs" 1 0
F B "sleep" 0 0
F B "delay_cycles" 1 0
F B "read_bank" 2 0
F B "write_bank" 3 0
F B "shift_left" 2 2
F B "shift_right" 2 2
F B "rotate_left" 2 0
F B "rotate_right" 2 0
F B "_mul" 2 0
F B "memset" 3 0
F B "isamoung" 2 0
F B "isamong" 2 0
F B "bit_set" 2 0
F B "bit_clear" 2 0
F B "bit_test" 2 0
F B "toupper" 1 0
F B "tolower" 1 0
F B "swap" 1 0
F B "printf" 1 255
F B "fprintf" 1 255
F B "sprintf" 1 255
F B "make8" 2 0
F B "make16" 2 0
F B "make32" 1 255
F B "label_address" 1 1
F B "goto_address" 1 0
F B "_va_arg" 1 0
F B "offsetofbit" 2 2
F B "enable_interrupts" 1 0
F B "disable_interrupts" 1 0
F B "interrupt_active" 1 0
F B "clear_interrupt" 1 0
F B "jump_to_isr" 1 0
F B "ext_int_edge" 1 2
F B "read_eeprom" 1 0
F B "write_eeprom" 2 0
F B "read_program_eeprom" 1 0
F B "write_program_eeprom" 2 0
F B "write_program_memory" 4 0
F B "write_program_memory8" 4 0
F B "read_program_memory" 4 0
F B "read_program_memory8" 4 0
F B "strcpy" 2 0
F B "memcpy" 3 0
F B "strstr100" 2 0
F B "output_high" 1 0
F B "output_low" 1 0
F B "input" 1 0
F B "input_state" 1 0
F B "output_float" 1 0
F B "output_drive" 1 0
F B "output_bit" 1 1
F B "output_toggle" 1 0
F B "output_a" 1 0
F B "output_b" 1 0
F B "output_c" 1 0
F B "output_d" 1 0
F B "output_e" 1 0
F B "input_a" 0 0
F B "input_b" 0 0
F B "input_c" 0 0
F B "input_d" 0 0
F B "input_e" 0 0
F B "set_tris_a" 1 0
F B "set_tris_b" 1 0
F B "set_tris_c" 1 0
F B "set_tris_d" 1 0
F B "set_tris_e" 1 0
F B "get_tris_a" 0 0
F B "get_tris_b" 0 0
F B "get_tris_c" 0 0
F B "get_tris_d" 0 0
F B "get_tris_e" 0 0
F B "input_change_a" 0 0
F B "input_change_b" 0 0
F B "input_change_c" 0 0
F B "input_change_d" 0 0
F B "input_change_e" 0 0
F B "port_b_pullups" 1 0
F B "setup_counters" 2 0
F B "setup_wdt" 1 0
F B "restart_cause" 0 0
F B "restart_wdt" 0 0
F B "get_rtcc" 0 0
F B "set_rtcc" 1 0
F B "get_timer0" 0 0
F B "set_timer0" 1 0
F B "setup_comparator" 1 0
F B "setup_port_a" 1 2
F B "setup_adc_ports" 1 2
F B "get_adc_ports" 0 0
F B "setup_adc" 1 0
F B "set_adc_channel" 1 0
F B "read_adc" 0 1
F B "adc_done" 0 0
F B "setup_timer_0" 1 0
F B "setup_vref" 1 0
F B "setup_timer_1" 1 0
F B "get_timer1" 0 0
F B "set_timer1" 1 0
F B "setup_timer_2" 3 0
F B "get_timer2" 0 0
F B "set_timer2" 1 0
F B "setup_ccp1" 1 0
F B "set_pwm1_duty" 1 0
F B "setup_ccp2" 1 0
F B "set_pwm2_duty" 1 0
F B "setup_psp" 1 0
F B "psp_output_full" 0 0
F B "psp_input_full" 0 0
F B "psp_overflow" 0 0
F B "setup_spi" 1 0
F B "spi_read" 0 1
F B "spi_write" 1 0
F B "spi_data_is_in" 0 0
F B "setup_spi2" 1 0
F B "spi_read2" 0 1
F B "spi_write2" 1 0
F B "spi_data_is_in2" 0 0
F B "delay_ms" 1 0
F B "delay_us" 1 0
F B "putchar" 1 2
F B "puts" 1 2
F B "getch" 0 1
F B "gets" 1 3
F B "kbhit" 0 1
F B "set_uart_speed" 1 3
F B "setup_uart" 1 3
